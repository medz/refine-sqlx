name: Comprehensive CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test-bun:
    name: Test with Bun (Native SQLite)
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies with Bun
        run: bun install --ignore-scripts
      
      - name: Check Bun version and SQLite support
        run: |
          bun --version
          echo "Bun version: $(bun --version)"
          echo "Testing Bun SQLite support..."
          bun -e "import { Database } from 'bun:sqlite'; console.log('Bun SQLite native support available');"
          
      - name: Clean up previous test databases
        run: |
          rm -f test-*.db
          rm -f *.test.db
          rm -f test-nodejs.db
          echo "Cleaned up test databases"
      
      - name: Run tests with Bun (Native SQLite)
        run: bun run test:bun
        env:
          TEST_RUNTIME: "bun"
      
      - name: Build with Bun
        run: bun run build
        
      - name: Test build output
        run: |
          ls -la dist/
          echo "Build artifacts created successfully"

  test-cloudflare-d1:
    name: Test with Cloudflare D1 (Mock)
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install workspace dependencies  
        run: npm install --workspaces
      
      - name: Setup Wrangler for D1
        run: npm install -g wrangler
      
      - name: Check D1 environment
        run: |
          wrangler --version
          echo "Cloudflare D1 environment setup complete"
          
      - name: Clean up previous test databases
        run: |
          rm -f test-*.db
          rm -f *.test.db
          rm -f test-nodejs.db
          echo "Cleaned up test databases"
      
      - name: Run tests with D1 Mock
        run: npm run test
        env:
          TEST_RUNTIME: "d1"
          FORCE_MOCK_SQLITE: "true"
      
      - name: Build project
        run: npm run build
        
      - name: Test build output
        run: |
          ls -la dist/
          echo "Build artifacts created successfully"

  test-node-sqlite:
    name: Test with Node.js (SQLite Mock)
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install workspace dependencies
        run: npm install --workspaces
      
      - name: Clean up previous test databases
        run: |
          rm -f test-*.db
          rm -f *.test.db
          rm -f test-nodejs.db
      
      - name: Run tests with Node.js (Mock mode)
        run: npm run test:run
        env:
          TEST_RUNTIME: "node"
          CI: "true"
          FORCE_MOCK_SQLITE: "true"

  test-with-coverage:
    name: Test with Coverage (Bun)
    runs-on: ubuntu-latest
    needs: test-bun
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies with Bun
        run: bun install --ignore-scripts
      
      - name: Clean up previous test databases
        run: |
          rm -f test-*.db
          rm -f *.test.db
          rm -f test-nodejs.db
      
      - name: Run tests with coverage (Bun)
        run: bun run test:coverage:bun

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test-bun, test-cloudflare-d1]
    if: github.event_name == 'release'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install workspace dependencies
        run: npm install --workspaces
      
      - name: Build all packages
        run: npm run build:all
      
      - name: Publish refine-sql
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Publish refine-orm
        run: npm publish --workspace=packages/refine-orm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
