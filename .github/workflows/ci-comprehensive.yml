name: Comprehensive CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  NODE_OPTIONS: --experimental-sqlite

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22, 24]
      fail-fast: false
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install workspace dependencies
        run: npm install --workspaces
      
      - name: Check Node.js version and SQLite support
        run: |
          node --version
          echo "Node.js version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Testing Node.js SQLite support..."
          node --experimental-sqlite -e "console.log('SQLite experimental flag is working')" || echo "SQLite experimental flag not available"
          echo "Testing node:sqlite import..."
          node --experimental-sqlite -e "import('node:sqlite').then(() => console.log('node:sqlite import successful')).catch(e => console.log('node:sqlite import failed:', e.message))" || echo "node:sqlite test failed"
          
      - name: Clean up previous test databases
        run: |
          rm -f test-*.db
          rm -f *.test.db
          rm -f test-nodejs.db
          echo "Cleaned up test databases"
      
      - name: Run tests (refine-sql)
        run: npm run test:run
        env:
          NODE_OPTIONS: --experimental-sqlite
      
      - name: Run tests (all workspaces)
        run: npm run test:all
        env:
          NODE_OPTIONS: --experimental-sqlite
      
      - name: Build refine-sql
        run: npm run build
        
      - name: Build all packages
        run: npm run build:all
        
      - name: Test build output
        run: |
          ls -la dist/
          echo "Build artifacts created successfully"

  test-with-coverage:
    name: Test with Coverage
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install workspace dependencies
        run: npm install --workspaces
      
      - name: Clean up previous test databases
        run: |
          rm -f test-*.db
          rm -f *.test.db
          rm -f test-nodejs.db
      
      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          NODE_OPTIONS: --experimental-sqlite

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install workspace dependencies
        run: npm install --workspaces
      
      - name: Build all packages
        run: npm run build:all
      
      - name: Publish refine-sql
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Publish refine-orm
        run: npm publish --workspace=packages/refine-orm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
